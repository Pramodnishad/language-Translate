{"ast":null,"code":"import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nconst availableLanguages = ['en', 'hi', 'sp', 'ma', 'ja']; // don't want to use this?\n// have a look at the Quick start guide \n// for passing in lng and translations on init\n\nconst option = {\n  order: ['navigator', 'htmlTag', 'path', 'subdomail'],\n  checkWhitelist: true\n};\ni18n // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n// learn more: https://github.com/i18next/i18next-http-backend\n// want your translations to be loaded from a professional CDN? => https://github.com/locize/react-tutorial#step-2---use-the-locize-cdn\n.use(Backend) // detect user language\n// learn more: https://github.com/i18next/i18next-browser-languageDetector\n.use(LanguageDetector) // pass the i18n instance to react-i18next.\n.use(initReactI18next).init({\n  fallbackLng: 'en',\n  debug: true,\n  whitelist: availableLanguages,\n  detection: option,\n  interpolation: {\n    escapeValue: false // not needed for react as it escapes by default\n\n  }\n});\nexport default i18n;","map":{"version":3,"names":["i18n","initReactI18next","Backend","LanguageDetector","availableLanguages","option","order","checkWhitelist","use","init","fallbackLng","debug","whitelist","detection","interpolation","escapeValue"],"sources":["D:/Desktop/Langauge-translator/src/i18n.js"],"sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nconst availableLanguages = ['en', 'hi', 'sp', 'ma', 'ja']\n// don't want to use this?\n// have a look at the Quick start guide \n// for passing in lng and translations on init\nconst option = {\n  order:['navigator', 'htmlTag', 'path', 'subdomail'],\n  checkWhitelist:true\n}\ni18n\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n  // learn more: https://github.com/i18next/i18next-http-backend\n  // want your translations to be loaded from a professional CDN? => https://github.com/locize/react-tutorial#step-2---use-the-locize-cdn\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  \n  .init({\n    fallbackLng: 'en',\n    debug: true,\n    whitelist:availableLanguages,\n    detection:option,\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    }\n  });\n\n\nexport default i18n;"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AAEA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,MAAMC,kBAAkB,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,CAA3B,C,CACA;AACA;AACA;;AACA,MAAMC,MAAM,GAAG;EACbC,KAAK,EAAC,CAAC,WAAD,EAAc,SAAd,EAAyB,MAAzB,EAAiC,WAAjC,CADO;EAEbC,cAAc,EAAC;AAFF,CAAf;AAIAP,IAAI,CACF;AACA;AACA;AAHE,CAIDQ,GAJH,CAION,OAJP,EAKE;AACA;AANF,CAOGM,GAPH,CAOOL,gBAPP,EAQE;AARF,CASGK,GATH,CASOP,gBATP,EAWGQ,IAXH,CAWQ;EACJC,WAAW,EAAE,IADT;EAEJC,KAAK,EAAE,IAFH;EAGJC,SAAS,EAACR,kBAHN;EAIJS,SAAS,EAACR,MAJN;EAKJS,aAAa,EAAE;IACbC,WAAW,EAAE,KADA,CACO;;EADP;AALX,CAXR;AAsBA,eAAef,IAAf"},"metadata":{},"sourceType":"module"}